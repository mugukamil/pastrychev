{"version":3,"sources":["helpers/_reset.sass","generated/_sprite-svg.scss","_main.sass","helpers/_mixins.sass","_header.sass","generated/_sprite-png.sass"],"names":[],"mappings":"AAAA;;;;;;;;EAQI,UAAU;EACV,WAAW;EACX,UAAU;EACV,yBAAyB;CAAG;;AAChC;EACI,2BAA2B;EAC3B,+BAA+B;CAAG;;AACtC;EACI,aAAa;CAAG;;AACpB;;;;EAII,yBAAyB;CAAG;;AAChC;;EAEI,gBAAgB;CAGG;;AALvB;;EAIQ,WAAW;EACX,UAAU;CAAG;;AACrB;EACI,eAAe;CAAG;;AACtB;EACI,UAAU;EACV,WAAW;EACX,UAAU;CAAG;;AACjB;;EAEI,cAAc;CAAG;;AACrB;EACI,sBAAsB;CAAG;;AAC7B;EACI,kBAAkB;EAClB,0BAA0B;EAC1B,YAAY;CAAG;;AACnB;EACI,uBAAuB;CAAG;;AAC9B;EACI,oBAAoB;CAAG;;AC9C3B;EACE,cAAc;EACd,YAAY;EACZ,WAAW;CACZ;;ACJD;EACI,uBAAuB;EACvB,kBAAkB;CAAG;;AAEzB;EACI,cAAc;EACd,aAAa;CAAG;;AAEpB;GC4HE,QAAS;CD3HM;;AADjB;ECyHI,aAAa;EACb,eAAe;EACf,YAAY;CAAG;;ADxHnB;EACE,sBAAsB;CAIY;;AALpC;EAGI,2BAA2B;CAAG;;AAHlC;EAKI,2BAA2B;CAAG;;AEhBlC;EACE,iBAAiB;CAqEa;;AAtEhC;EDuQE,sBAAsB;EACtB,oBAAoB;ECpQlB,mBAAmB;CAAG;;AAJ1B;EDuQE,sBAAsB;EACtB,oBAAoB;ECjQlB,iBAAiB;EACjB,eAAe;EACf,oCAAoC;EACpC,iBAAiB;EACjB,0BAA0B;CAQD;;AAnB7B;EAaM,sBAAsB;EACtB,gBAAgB;EAChB,kBAAkB;EAClB,8BAA8B;CAAG;;AAhBvC;EAkBM,gBAAgB;EAChB,kBAAkB;CAAG;;AAnB3B;EAqBI,aAAa;EDkPf,sBAAsB;EACtB,oBAAoB;CClPH;;AAtBnB;EAwBI,kBAAkB;CAoBQ;;AA5C9B;EA0BM,sBAAsB;EACtB,uBAAuB;CASG;;AApChC;EA6BQ,YAAY;EACZ,sBAAsB;EACtB,uBAAuB;EACvB,WAAW;EACX,aAAa;EACb,0BAA0B;EAC1B,kBAAkB;EAClB,mBAAmB;CAAG;;AApC9B;EAsCM,aAAa;EACb,eAAe;EACf,oCAAoC;EACpC,gBAAgB;EAChB,iBAAiB;CAEK;;AA5C5B;EA4CQ,eAAe;CAAG;;AA5C1B;EDuQE,sBAAsB;EACtB,oBAAoB;CC3MU;;AA7DhC;EAiDM,sBAAsB;EC/B1B,2CAAqB;EACrB,YAZ+D;EAa/D,aAbwE;EAcxE,+BAdsD;ED4ClD,kBAAkB;CAAG;;AAnD3B;EAqDM,oCAAoC;EACpC,iBAAiB;EACjB,0BAA0B;EAC1B,eAAe;EACf,gBAAgB;CAIQ;;AA7D9B;EA2DQ,eAAe;EACf,gBAAgB;EAChB,iBAAiB;CAAG;;AA7D5B;EDuQE,sBAAsB;EACtB,oBAAoB;CClMQ;;AAtE9B;EAiEM,YAAY;EACZ,oCAAoC;EACpC,gBAAgB;EAChB,iBAAiB;CAEK;;AAtE5B;EAsEQ,eAAe;CAAG","file":"app.css","sourcesContent":["html, body, div, span, applet, object, iframe,h1, h2, h3, h4, h5,\nh6, p, blockquote, pre,a, abbr, acronym, address, big,\ncite, code,del, dfn, em, img, ins, kbd, q, s, samp,small,\nstrike, strong, sub, sup, tt, var,b, u, i, center,dl, dt,\ndd, ol, ul, li,fieldset, form, label, legend,table, caption,\ntbody, tfoot, thead, tr, th, td,article, aside, canvas, details,\nembed, figure, figcaption, footer, header, hgroup, menu, nav,\noutput, ruby, section, summary,time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    vertical-align: baseline; }\nhtml {\n    -ms-text-size-adjust: 100%;\n    -webkit-text-size-adjust: 100%; }\nimg,fieldset, a img {\n    border: none; }\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"tel\"],\ntextarea {\n    -webkit-appearance: none; }\ninput[type=\"submit\"],\nbutton {\n    cursor: pointer;\n    &::-moz-focus-inner {\n        padding: 0;\n        border: 0; } }\ntextarea {\n    overflow: auto; }\ninput, button {\n    margin: 0;\n    padding: 0;\n    border: 0; }\ndiv, input, textarea, select,button,\nh1,h2,h3,h4,h5,h6,a,span,a:focus {\n    outline: none; }\nul,ol {\n    list-style-type: none; }\ntable {\n    border-spacing: 0;\n    border-collapse: collapse;\n    width: 100%; }\nhtml {\n    box-sizing: border-box; }\n*, *:before, *:after {\n    box-sizing: inherit; }\n",".icon-facebook {\n  width: 0.53em;\n  height: 1em;\n  fill: #000;\n}\n","body {\n    background-color: #eee;\n    min-width: 1254px; }\n\n.container {\n    width: 1254px;\n    margin: auto; }\n\n.clr {\n  @include clr; }\n\na {\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline; }\n  &:active {\n    text-decoration: underline; } }\n","// width\n@mixin r($width) {\n  @media only screen and (max-width: $width+ \"px\") {\n    @content; } }\n\n@mixin rmin($width) {\n  @media only screen and (min-width: $width+ \"px\") {\n    @content; } }\n\n// height\n@mixin rh($height) {\n  @media only screen and (max-height: $height + \"px\") {\n    @content; } }\n\n@mixin rhmin($height) {\n  @media only screen and (min-height: $height + \"px\") {\n    @content; } }\n\n@mixin fs($sizeValue: 16) {\n  font-size: $sizeValue + px;\n  font-size: $sizeValue / 10 + rem; }\n\n@mixin text-overflow {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap; }\n\n\n%pseudo {\n  position: relative;\n  &:before,&:after {\n    content: ' ';\n    position: absolute;\n    top: 0;\n    left: 0; } }\n@mixin pseudo {\n  @extend %pseudo; }\n\n@mixin coverdiv {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%; }\n\n@mixin cover {\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: 50% 50%; }\n\n@mixin bg-size($width: 100%, $height: 100%) {\n  background-size: $width $height; }\n\n// retina, also available as +hdpi\n@mixin retina {\n  @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) {\n    @content; } }\n\n@mixin box {\n  @include box-sizing(border-box); }\n// vertical-align at center\n@mixin vcenter {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%,-50%); }\n\n//simple gradient\n@mixin g($color1, $color2) {\n  background-image: linear-gradient($color1, $color2); }\n\n@mixin gh($color1, $color2) {\n  background-image: linear-gradient(left, $color1, $color2); }\n\n// font-family\n@mixin font($alias, $name) {\n  @font-face {\n    font-family: $alias;\n    src: url(\"../fonts/\" + $name + \".woff2\") format(\"woff2\"), url(\"../fonts/\" + $name + \".woff\") format(\"woff\");\n    font-weight: normal;\n    font-style: normal; } }\n// to use:\n//+font(black, cytiapro-black-webfont)\n\n// ROTATE\n@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {\n  transform: rotate($deg + deg);\n  filter: progid:DXImageTransform.Microsoft.Matrix(M11=$m11, M12=$m12,M21=$m21, M22=$m22, sizingMethod='auto expand');\n  zoom: 1; }\n\n// TRANSITION\n\n@mixin tr($what) {\n  transition: $what; }\n\n@mixin hide-text {\n  font: 0/0 a;\n  text-shadow: none;\n  color: transparent; }\n\n@mixin hidetext {\n  @include hide-text; }\n\n@mixin justify {\n  text-align: justify;\n  line-height: 0;\n  font-size: 0;\n  text-justify: newspaper;\n  zoom: 1;\n  text-align-last: justify;\n  &:after {\n    content: \"\";\n    display: inline-block;\n    width: 100%;\n    height: 0px;\n    visibility: hidden;\n    overflow: hidden; } }\n@mixin vertical {\n  text-align: center;\n  font-size: 0;\n  &:before {\n    content: \"\";\n    display: inline-block;\n    vertical-align: middle;\n    width: 0;\n    height: 100%; } }\n\n@mixin clr {\n  &:after {\n    content: \" \";\n    display: table;\n    clear: both; }\n  *zoom: 1; }\n\n@mixin placeholder-color($color) {\n  &::placeholder {\n    color: $color; } }\n\n@mixin placeholder {\n  &::placeholder {\n    @content; } }\n\n@mixin gray {\n  filter: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='matrix' values='0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0'/></filter></svg>#grayscale\");\n  // Firefox 10+\n  filter: gray;\n  // IE6-9\n  -webkit-filter: grayscale(100%);\n  // Chrome 19+ & Safari 6+\n  filter: progid:DXImageTransform.Microsoft.BasicImage(grayScale=1);\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(grayScale=1)\"; }\n\n@mixin gray-half {\n  filter: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='saturate' values='0.5'/></filter></svg>#grayscale\");\n  // Firefox 10+\n  filter: gray alpha(opacity = 50);\n  // IE6-9\n  -webkit-filter: grayscale(50%);\n }  // Chrome 19+ & Safari 6+\n\n@mixin gray-zero {\n  filter: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='matrix' values='1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0'/></filter></svg>#grayscale\");\n  -webkit-filter: grayscale(0%); }\n\n@mixin unselectable {\n  user-select: none; }\n\n@mixin nosel {\n  @include unselectable; }\n\n@mixin prevent-text {\n  word-break: break-all;\n  word-break: break-word;\n  hyphens: auto; }\n\n@mixin font-smoothing($val: antialiased) {\n  font-smoothing: $val; }\n\n@mixin selection {\n  & ::selection {\n    @content; } }\n@mixin sel {\n  @include selection; }\n\n@mixin gpu {\n  transform: translate3d(0, 0, 0); }\n\n@mixin scrollbar {\n  &::-webkit-scrollbar {\n    @content; } }\n\n@mixin scrollbar-track {\n  &::-webkit-scrollbar-track {\n    @content; } }\n\n@mixin scrollbar-thumb {\n  &::-webkit-scrollbar-thumb {\n    @content; } }\n\n@mixin scrollbar-track-piece {\n  &::-webkit-scrollbar-track-piece {\n    @content; } }\n\n//triangle\n@mixin arr($width, $height, $bg, $direction) {\n  width: 0px;\n  height: 0px;\n  border-style: solid;\n  @if $direction == t {\n    border-width: 0 $width / 2 + px $height + px $width / 2 + px;\n    border-color: transparent transparent $bg transparent; }\n  @if $direction == r {\n    border-width: $height / 2 + px 0 $height / 2 + px $width + px;\n    border-color: transparent transparent transparent $bg; }\n  @if $direction == b {\n    border-width: $height + px $width / 2 + px 0 $width / 2 + px;\n    border-color: $bg transparent transparent transparent; }\n  @if $direction == l {\n    border-width: $height / 2 + px $width + px $height / 2 + px 0;\n    border-color: transparent $bg transparent transparent; }\n  @if $direction == tl {\n    border-width: $height + px $width + px 0 0;\n    border-color: $bg transparent transparent transparent; }\n  @if $direction == tr {\n    border-width: 0 $width + px $height + px 0;\n    border-color: transparent $bg transparent transparent; }\n  @if $direction == br {\n    border-width: 0 0 $height + px $width + px;\n    border-color: transparent transparent $bg transparent; }\n  @if $direction == bl {\n    border-width: $width + px 0 0 $height + px;\n    border-color: transparent transparent transparent $bg; } }\n// example\n// +arr(500,50, #000, l)\n// +arr(500,50, #000, bl)\n\n@mixin rotate($var) {\n  transform: rotate($var+deg); }\n\n@mixin blur($var) {\n  filter: blur($var); }\n@mixin scale($var) {\n  transform: scale($var); }\n\n@mixin counter($var, $sep) {\n  counter-reset: list + $var;\n  > li {\n    &:before {\n      content: counter(list + $var) $sep;\n      counter-increment: list + $var; } } }\n\n@mixin f($name, $font-size: null, $letter-spacing: null) {\n  $font-family: null;\n  @if $name == \"l\" {\n    $font-family: \"light\"; }\n  font-family: $font-family;\n  font-weight: normal;\n  @if $font-size != null {\n    font-size: $font-size + px; }\n  @if $letter-spacing != null {\n    letter-spacing: ($letter-spacing / 1000) + em; } }\n\n@mixin dib {\n  display: inline-block;\n  vertical-align: top; }\n",".site-header {\n  margin-top: 20px;\n  &__logo {\n    @include dib;\n    margin-right: 20px; }\n  .slogan {\n    @include dib;\n    margin-top: 80px;\n    color: #444444;\n    font-family: \"PF Din Text Cond Pro\";\n    font-weight: 400;\n    text-transform: uppercase;\n    &__text-border {\n      display: inline-block;\n      font-size: 22px;\n      padding-top: 20px;\n      border-top: 1px solid #9f9f9f; }\n    &__text-big {\n      font-size: 30px;\n      line-height: 40px; } }\n  &__right {\n    float: right;\n    @include dib; }\n  &__login {\n    text-align: right;\n    li {\n      display: inline-block;\n      vertical-align: middle;\n      & + li:before {\n        content: '';\n        display: inline-block;\n        vertical-align: middle;\n        width: 1px;\n        height: 30px;\n        background-color: #9f9f9f;\n        margin-left: 10px;\n        margin-right: 15px; } }\n    a {\n      height: 17px;\n      color: #000000;\n      font-family: \"PF Din Text Cond Pro\";\n      font-size: 18px;\n      font-weight: 400;\n      &:active {\n        color: #9f9f9f; } } }\n  &__contacts {}\n  &__phone {\n    @include dib;\n    .icon {\n      display: inline-block;\n      @include s(icon-phone);\n      margin-right: 8px; }\n    a {\n      font-family: \"PF Din Text Cond Pro\";\n      font-weight: 400;\n      text-transform: uppercase;\n      color: #444444;\n      font-size: 22px;\n      strong {\n        color: #000000;\n        font-size: 26px;\n        font-weight: 400; } } }\n  &__email {\n    @include dib;\n    a {\n      color: #000;\n      font-family: \"PF Din Text Cond Pro\";\n      font-size: 26px;\n      font-weight: 400;\n      &:active {\n        color: #9f9f9f; } } } }\n\n\n","$icons: (0:0);\n$icons: map-merge($icons,('facebook': (X: -132px, Y:-48px, W: 10px, H: 19px, TW: 152px, TH: 116px, IMG: '../img/sprite.png')));\n$icons: map-merge($icons,('facebook@2x': (X: -132px, Y:0px, W: 20px, H: 38px, TW: 152px, TH: 116px, IMG: '../img/sprite.png')));\n$icons: map-merge($icons,('icon-fb': (X: 0px, Y:0px, W: 34px, H: 34px, TW: 152px, TH: 116px, IMG: '../img/sprite.png')));\n$icons: map-merge($icons,('icon-inst--hover': (X: -44px, Y:0px, W: 34px, H: 34px, TW: 152px, TH: 116px, IMG: '../img/sprite.png')));\n$icons: map-merge($icons,('icon-inst--release': (X: 0px, Y:-44px, W: 34px, H: 34px, TW: 152px, TH: 116px, IMG: '../img/sprite.png')));\n$icons: map-merge($icons,('icon-inst': (X: -44px, Y:-44px, W: 34px, H: 34px, TW: 152px, TH: 116px, IMG: '../img/sprite.png')));\n$icons: map-merge($icons,('icon-phone': (X: 0px, Y:-88px, W: 34px, H: 28px, TW: 152px, TH: 116px, IMG: '../img/sprite.png')));\n$icons: map-merge($icons,('icon-question': (X: -88px, Y:0px, W: 34px, H: 34px, TW: 152px, TH: 116px, IMG: '../img/sprite.png')));\n$icons: map-merge($icons,('icon-vk': (X: -88px, Y:-44px, W: 34px, H: 34px, TW: 152px, TH: 116px, IMG: '../img/sprite.png')));\n\n\n// Gets an attribute from the sass map\n@function icon-attr($icon, $attr) {\n  $icon: map-get($icons, $icon);\n  @return map-get($icon, $attr); }\n\n@mixin sprite($iconName) {\n  background-image: url(icon-attr($iconName, IMG));\n  width: icon-attr($iconName, W);\n  height: icon-attr($iconName, H);\n  background-position: icon-attr($iconName, X) icon-attr($iconName, Y); }\n@mixin sprite-position($iconName) {\n  background-position: icon-attr($iconName, X) icon-attr($iconName, Y); }\n@mixin sprite-retina($iconName) {\n  background-image: url(icon-attr($iconName, IMG));\n  $width: icon-attr($iconName, W);\n  $height: icon-attr($iconName, H);\n  width: $width/2;\n  height: $height/2;\n  $x: icon-attr($iconName, X);\n  $y: icon-attr($iconName, Y);\n  background-position: $x/2 $y/2;\n  $tw: icon-attr($iconName, TW);\n  $th: icon-attr($iconName, TH);\n  background-size: $tw/2 $th/2; }\n\n\n@mixin s($i) {\n  @include sprite($i); }\n@mixin sp($i) {\n  @include sprite-position($i); }\n@mixin sr($i) {\n  @include sprite-retina($i); }\n\n//\n//.icon-facebook\n//  width: 10px\n//  height: 19px\n//  background-image: url('../img/sprite.png')\n//  background-position: -132px -48px\n//\n//.icon-facebook@2x\n//  width: 20px\n//  height: 38px\n//  background-image: url('../img/sprite.png')\n//  background-position: -132px 0px\n//\n//.icon-icon-fb\n//  width: 34px\n//  height: 34px\n//  background-image: url('../img/sprite.png')\n//  background-position: 0px 0px\n//\n//.icon-icon-inst--hover\n//  width: 34px\n//  height: 34px\n//  background-image: url('../img/sprite.png')\n//  background-position: -44px 0px\n//\n//.icon-icon-inst--release\n//  width: 34px\n//  height: 34px\n//  background-image: url('../img/sprite.png')\n//  background-position: 0px -44px\n//\n//.icon-icon-inst\n//  width: 34px\n//  height: 34px\n//  background-image: url('../img/sprite.png')\n//  background-position: -44px -44px\n//\n//.icon-icon-phone\n//  width: 34px\n//  height: 28px\n//  background-image: url('../img/sprite.png')\n//  background-position: 0px -88px\n//\n//.icon-icon-question\n//  width: 34px\n//  height: 34px\n//  background-image: url('../img/sprite.png')\n//  background-position: -88px 0px\n//\n//.icon-icon-vk\n//  width: 34px\n//  height: 34px\n//  background-image: url('../img/sprite.png')\n//  background-position: -88px -44px\n//\n"]}